Introduction
============

NVPipe is a lightweight library for image compression.  It provides
access to NVIDIA's hardware accelerated codecs as well as a software
fallback to libx264.

Build
=====

The library requires a specially-built version of FFMpeg.  The user should
first modify FFMpeg's libavcodec/cuvid.c:

```c
diff --git a/libavcodec/cuvid.c b/libavcodec/cuvid.c
index 1da0e87..413b018 100644
--- a/libavcodec/cuvid.c
+++ b/libavcodec/cuvid.c
@@ -617,7 +617,7 @@ static av_cold int cuvid_decode_init(AVCodecContext *avctx)
     }

     cuparseinfo.ulMaxNumDecodeSurfaces = MAX_FRAME_COUNT;
-    cuparseinfo.ulMaxDisplayDelay = 4;
+    cuparseinfo.ulMaxDisplayDelay = 0; // NVIDIA: hacked from 4 for nvpipe.
     cuparseinfo.pUserData = avctx;
     cuparseinfo.pfnSequenceCallback = cuvid_handle_video_sequence;
     cuparseinfo.pfnDecodePicture = cuvid_handle_picture_decode;
```

Secondly, you'll need to download the NVIDIA video codec SDK from:

	https://developer.nvidia.com/nvidia-video-codec-sdk

and pull out the headers from the Samples/common/inc directory:

```sh
	cp -r Video_Codec_SDK_7.0.1/Samples/common/inc \
		${HOME}/sw/nv-video-sdk-7.0.1/include 
```

Then build FFMpeg with the 'nvenc' and 'cuvid' backends enabled:

```sh
	#!/bin/sh

	export CFLAGS="-ggdb -fPIC -O3"
	export CXXFLAGS="-ggdb -fPIC -O3"
	cu="/usr/local/cuda"
	sdk="${HOME}/sw/nv-video-sdk-7.0.1/"

	rm -fr libav* libsw*
	rm -f config.cache
	../configure \
		--prefix="${HOME}/sw/ffmpeg3.1" \
		--enable-shared \
		--enable-nonfree \
		--enable-nvenc \
		--enable-cuda \
		--enable-cuvid \
		--disable-yasm \
		--disable-gpl \
		--extra-cflags="-fPIC -I${cu}/include -I${sdk}/include" \
		--extra-ldflags="-fPIC -L${cu}/lib64 -L${cu}/lib" \
		--disable-everything \
		--enable-decoder=h264 \
		--enable-decoder=h264_crystalhd \
		--enable-decoder=h264_cuvid \
		--enable-decoder=hevc \
		--enable-decoder=hevc_cuvid \
		--enable-decoder=mjpeg \
		--enable-decoder=mjpegb \
		--enable-encoder=mjpeg \
		--enable-encoder=nvenc \
		--enable-encoder=nvenc_h264 \
		--enable-encoder=nvenc_hevc \
		--enable-encoder=h264_nvenc \
		--enable-encoder=hevc_nvenc \
		--enable-encoder=png \
		--enable-hwaccel=h264_cuvid \
		--enable-hwaccel=hevc_cuvid \
		--enable-parser=png \
		--enable-parser=h264 \
		--enable-parser=hevc \
		--enable-parser=mjpeg \
		--enable-demuxer=mjpeg \
		--enable-demuxer=h264 \
		--enable-demuxer=hevc \
		--enable-demuxer=image2 \
		--enable-muxer=image2 \
		--enable-muxer=mjpeg \
		--enable-muxer=h264 \
		--enable-muxer=hevc \
		--enable-protocol=sctp \
		--enable-protocol=pipe \
		--enable-protocol=file \
		--enable-protocol=tcp \
		--enable-protocol=udp \
		--enable-protocol=udplite \
		--enable-filter=blend \
		--enable-indev=x11grab_xcb \
		--enable-bsf=h264_mp4toannexb \
		--enable-bsf=hevc_mp4toannexb
	make -j
	make install
```

Finally build this library using by pointing it at this special FFMpeg
(note the NVCC flags force Maxwell and higher hardware; adjust for your
environment!):

```sh
	#!/bin/sh

	rm -fr CMakeFiles generated
	rm -f CMakeCache.txt cmake_install.cmake Makefile
	sdk="${HOME}/sw/nv-video-sdk-7.0.1"
	ffmpeg="${HOME}/sw/ffmpeg3.1"
	fcommon="-ggdb -O3 -fPIC"
	ldf="${fcommon} -L${ffmpeg}/lib"
	cmake \
		-DCMAKE_BUILD_TYPE:string=Debug \
		-DCMAKE_CXX_FLAGS:string="-I${sdk}/include -I${ffmpeg}/include ${fcommon}" \
		-DCMAKE_MODULE_LINKER_FLAGS:string="${ldf}" \
		-DCMAKE_SHARED_LINKER_FLAGS:string="${ldf}" \
		-DCMAKE_EXE_LINKER_FLAGS:string="${ldf}" \
		-DCMAKE_INSTALL_PREFIX:path=${HOME}/sw/nvpipe \
		-DCMAKE_VERBOSE_MAKEFILE:bool=true \
		-DCMAKE_SKIP_RPATH:bool=true \
		-DCUDA_NVCC_FLAGS:string="--gpu-architecture=sm_52 -Xcompiler -Wall" \
		../
	make -j
	make install
```

Usage
=====

Please refer to nvpipe.h for instructions.
